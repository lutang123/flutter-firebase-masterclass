How to Merge Latest Changes from Andrea‚Äôs Repo into Your Fork
You forked his GitHub repo (say codewithandrea/flutter-firebase-masterclass) and cloned your fork locally.

### Add the Original Repo as Upstream

This allows you to pull the latest updates from `bizz84`'s repo later:

```bash
git remote add upstream https://github.com/bizz84/flutter-firebase-masterclass.git
```

Check remotes with:

```bash
git remote -v
```

You should see:

```
origin    https://github.com/yourusername/flutter-firebase-masterclass.git (fetch)
upstream  https://github.com/bizz84/flutter-firebase-masterclass.git (fetch)
```

---

### Create Your Own Branches, Make Changes, and Commit

For example:

```bash
git checkout -b my-tweaks
# Make your code changes
git add .
git commit -m "My custom changes"
git push origin my-tweaks
```

Now it's on your GitHub and tracked under your own commit history.

---

### Stay Updated with Original Repo

To pull updates from `bizz84`:

```bash
git checkout main
git pull upstream main
git push origin main
```

To sync branches:

```bash
git fetch upstream
git checkout some-branch
git merge upstream/some-branch
git push origin some-branch
```


‚úÖ Your Goal:
Keep pulling updates from Andrea's bizz84/flutter-firebase-masterclass (upstream)

Push your changes to your own GitHub repo (origin)

Keep working locally on main or your own feature branches

‚úÖ 1. Make sure your local branch main tracks origin/main:
bash
Copy
Edit
git branch --set-upstream-to=origin/main main
That tells Git:

‚ÄúWhen I push/pull main, I mean my own GitHub fork (origin/main).‚Äù

‚úÖ 2. Push your local changes to your fork:
bash
Copy
Edit
git push origin main

‚úÖ 3. Later: Pull updates from Andrea (the upstream remote)
When you want to fetch new changes from Andrea‚Äôs repo:

bash
Copy
Edit
git fetch upstream
git merge upstream/main
# OR if you prefer rebase
# git rebase upstream/main
Then push updates back to your repo:

bash
Copy
Edit
git push origin main

üß† Tip: Safer Workflow for Future
If you're making big changes, consider creating your own feature branches:

bash
Copy
Edit
git checkout -b feature/my-custom-work
Then push:

bash
Copy
Edit
git push -u origin feature/my-custom-work
You can always sync with Andrea‚Äôs main by merging it into your own branches.

